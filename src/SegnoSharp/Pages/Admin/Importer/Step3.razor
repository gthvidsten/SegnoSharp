@page "/admin/import/step-3"
@using Whitestone.SegnoSharp.Database.Models

@attribute [Authorize]

<div class="Import">
    <ul class="Steps">
        <li>Select Folder</li>
        <li>Select Files</li>
        <li class="active">Verify Metadata</li>
        <li>Import</li>
    </ul>
    <div class="ImportVerifyMetadata">
        <div>
            @foreach (Album album in Albums.OrderBy(a => a.Title))
            {
                <div class="AlbumInfo">
                    <input type="text" @bind="@album.Title" class="Title" />
                    <table>
                        <tbody>
                            <tr>
                                <th>Published:</th>
                                <td><input type="number" @bind="@album.Published" /></td>
                            </tr>
                            <tr>
                                <th>Genres:</th>
                                <td><input type="text" @bind="@(((AlbumViewModel)album).GenresString)" /></td>
                            </tr>
                            <tr>
                                <th>Album artist(s):</th>
                                <td><input type="text" @bind="@(((AlbumViewModel)album).AlbumArtistString)" /></td>
                            </tr>
                            <tr>
                                <th><label for="@(((AlbumViewModel)album).TempId + "-isPublic")">Is public:</label></th>
                                <td><input id="@(((AlbumViewModel)album).TempId + "-isPublic")" type="checkbox" @bind="@album.IsPublic" /></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                @foreach (Disc disc in album.Discs.OrderBy(d => d.DiscNumber))
                {
                    <div class="MediaInfo">
                        Media <input type="number" @bind="@disc.DiscNumber" class="Number" />
                        - Type:
                        <select @bind="@(((DiscViewModel)disc).SelectedMediaType)">
                            <option value="-1"></option>
                            @foreach (MediaType mediaType in MediaTypes)
                            {
                                <option value="@mediaType.Id">@mediaType.Name</option>
                            }
                        </select>
                    </div>
                    <div class="Tracks">
                        <div class="FakeTable">
                            <div class="th">&nbsp;</div><!-- These 'weird' comments are to make the divs be on the same "line", and therefore not have a whitespace between them.
                            --><div class="th">Track #</div><!--
                            --><div class="th">Length</div><!--
                            --><div class="th">Playlist</div><!--
                            --><div class="th">Title</div><!--
                            --><div class="th">Artist(s)</div><!--
                            --><div class="th">Composer(s)</div>
                            @foreach (Track track in disc.Tracks.OrderBy(t => t.TrackNumber))
                            {
                                <div draggable="true"
                                     class="@(((TrackViewModel)track).CssClass) Track tr"
                                     ondragover="event.preventDefault();"
                                @ondragstart="() => OnDragStart((TrackViewModel)track)"
                                @ondrop="() => HandleDrop((TrackViewModel)track)"
                                @ondragend="HandleDragEnd"
                                @ondragenter="((TrackViewModel)track).HandleDragEnter"
                                @ondragleave="((TrackViewModel)track).HandleDragLeave">
                                    <div class="td"><span class="fa-solid fa-grip"></span></div><!--
                                    --><div class="td"><input type="number" @bind="@track.TrackNumber" class="Number" /></div><!--
                                    --><div class="td"><input type="text" @bind="@track.Duration" class="Duration" /></div><!--
                                    --><div class="td"><input type="checkbox" @bind="@(((TrackViewModel)track).ImportToPlaylist)" /></div><!--
                                    --><div class="td"><input type="text" @bind="@track.Title" class="Title" /></div><!--
                                    --><div class="td"><input type="text" @bind="@(((TrackViewModel)track).ArtistString)" class="Artist" /></div><!--
                                    --><div class="td"><input type="text" @bind="@(((TrackViewModel)track).ComposerString)" class="Composer" /></div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>
        <div class="NextBack">
            <button @onclick="OnNextClick">Next &gt;</button>
            <button @onclick="OnBackClick">&lt; Back</button>
        </div>
    </div>
</div>
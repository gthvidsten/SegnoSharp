@using System.Globalization
@typeparam TItem

<div class="TagList">
    @foreach (TItem item in Items.OrderBy(i => i.TagName))
    {
        <span>@item.TagName<button @onclick="() => RemoveItem(item)"><span class="fa-regular fa-circle-xmark"></span></button></span>
    }
    <input @bind="Search" @bind:event="oninput" @bind:after="StartSearchTimer" @onblur="OnBlur" />
    @if (Search.Trim().Length > 0)
    {
        <div>
            @if (SearchResults.Any())
            {
                @foreach (TItem searchResultItem in SearchResults)
                {
                    <button @onmousedown="() => AddItem(searchResultItem)">@searchResultItem.TagName</button>
                }
            }
            @{
                string newName = CultureInfo.CurrentUICulture.TextInfo.ToTitleCase(Search);
                var item = new TItem { TagName = newName };
                if (SearchResults.All(i => i.TagName != item.TagName))
                {
                    if (Items.All(g => g.TagName != item.TagName))
                    {
                        <button class="New" title="Create new" @onmousedown="() => AddNewItem(newName)">@newName<span class="fa-solid fa-plus-circle"></span></button>
                    }
                }
            }
        </div>
    }
</div>
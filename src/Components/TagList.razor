@using System.Globalization
@using Microsoft.AspNetCore.Components.Forms
@typeparam TItem

<div class="TagList">
    @if (Items != null)
    {
        @foreach (TItem item in Items.OrderBy(i => i.TagName))
        {
            <span>@item.TagName<button @onclick="() => RemoveItem(item)"><span class="fa-regular fa-circle-xmark"></span></button></span>
        }
    }
    @if (Selection != null)
    {
        <select @bind="SelectionSelected">
            <option value="0"></option>
            @if (Items != null)
            {
                @foreach (TItem item in Selection.Where(i => !Items.Contains(i)))
                {
                    <option value="@item.Id">@item.TagName (@item.Id)</option>
                }
            }
        </select>
    }
    else
    {
        <input @bind="Search" @bind:event="oninput" @bind:after="StartSearchTimer" @onblur="OnBlur" />
    }
    @if (Search.Trim().Length > 0)
    {
        <div>
            @if (SearchResults.Any())
            {
                @foreach (TItem searchResultItem in SearchResults)
                {
                    <button @onmousedown="() => AddItem(searchResultItem)">@searchResultItem.TagName</button>
                }
            }
            @{
                string newName = CultureInfo.CurrentUICulture.TextInfo.ToTitleCase(Search);
                var item = new TItem { TagName = newName };
                if (SearchResults.All(i => i.TagName != item.TagName))
                {
                    if (Items.All(g => g.TagName != item.TagName))
                    {
                        <button class="New" title="Create new" @onmousedown="() => AddNewItem(newName)">@newName<span class="fa-solid fa-plus-circle"></span></button>
                    }
                }
            }
        </div>
    }
</div>
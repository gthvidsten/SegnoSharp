@page "/admin/playlist/processors"
@rendermode InteractiveServer
@using System.Reflection
@using Whitestone.SegnoSharp.Common.Attributes
@using Whitestone.SegnoSharp.Common.Attributes.PersistenceManager
@using Whitestone.SegnoSharp.Common.Interfaces
@using Whitestone.SegnoSharp.Common.Models
@attribute [Authorize]
@attribute [ModuleMenu("Processors", typeof(Playlist), true)]

<h1>Playlist rules</h1>

<div>Warning: Changes are saved immediately</div>

<ObjectPropertyEditor Object="PlaylistSettings" ObjectProperty="PlaylistSettings.GetType().GetProperty(nameof(PlaylistSettings.MinimumNumberOfSongs))!" />
<ObjectPropertyEditor Object="PlaylistSettings" ObjectProperty="PlaylistSettings.GetType().GetProperty(nameof(PlaylistSettings.MinimumTotalDuration))!" />

<h2>Playlist processors</h2>

<div>
    @foreach (IPlaylistProcessor processor in PlaylistProcessors.OrderByDescending(p => p.Settings.SortOrder))
    {
        <h2>@processor.Name</h2>
        <label for="@(processor.Name.ToLower().Replace(" ", "_"))-enabled">Enabled:</label>
        <input id="@(processor.Name.ToLower().Replace(" ", "_"))-enabled" type="checkbox" @bind="processor.Settings.Enabled" />

        @if (processor.Settings.SortOrder > 0 && processor.Settings.SortOrder < PlaylistProcessors.Count() - 1)
        {
            <button @onclick="() => MoveProcessorUp(processor)">Move up</button>
        }
        @if (processor.Settings.SortOrder > 1)
        {
            <button @onclick="() => MoveProcessorDown(processor)">Move down</button>
        }

        foreach (PropertyInfo property in processor.Settings.GetType().GetProperties())
        {
            if (property.Name is nameof(PlaylistProcessorSettings.Enabled)
                    or nameof(PlaylistProcessorSettings.SortOrder))
            {
                continue;
            }

            foreach (object attribute in property.GetCustomAttributes(true))
            {
                if (attribute is PersistAttribute)
                {
                    <ObjectPropertyEditor Object="processor.Settings" ObjectProperty="property" />
                }
            }
        }
    }
</div>